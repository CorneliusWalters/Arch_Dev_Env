#!/bin/bash
###     fname: zxc_p10k.sh
###     dir: /mnt/c/wsl/scripts/lib/config/zxc_p10k.sh

#######--- START OF FILE ---#######
# --- START: Define all paths locally. This makes the script self-contained. ---
# Directory Creation is done in 2_set_dirs.sh
PRISTINE_FILE="$HOME/.config/dotfiles-pristine/zsh/.p10k.zsh"
WORKING_FILE="$HOME/.config/zsh/.p10k.zsh"
PATCH_FILE="$WORKING_FILE.patch"
# --- END: Path definitions ---

print_status "P10K_WORKER" "Deploying pristine .p10k.zsh..."

cat >"$PRISTINE_FILE" <<'EOL'
# Generated by Powerlevel10k configuration wizard
'builtin' 'local' '-a' 'p10k_config_opts'
[[ ! -o 'aliases'         ]] || p10k_config_opts+=('aliases')
[[ ! -o 'sh_glob'        ]] || p10k_config_opts+=('sh_glob')
[[ ! -o 'no_brace_expand' ]] || p10k_config_opts+=('no_brace_expand')
'builtin' 'setopt' 'no_aliases' 'no_sh_glob' 'brace_expand'

() {
  emulate -L zsh -o extended_glob

  # Kanagawa-inspired colors
  local dark_sumiInk='#1F1F28'
  local fujiWhite='#DCD7BA'
  local springViolet='#938AA9'
  local oniViolet='#957FB8'
  local crystalBlue='#7E9CD8'
  local springGreen='#98BB6C'
  local autumnGreen='#76946A'
  local autumnRed='#C34043'
  local autumnYellow='#DCA561'
  local boatYellow='#938056'
  local fujiGray='#727169'

  # Customize prompt
  typeset -g POWERLEVEL9K_MODE=nerdfont-complete
  typeset -g POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
  typeset -g POWERLEVEL9K_PROMPT_ON_NEWLINE=true
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=""
  typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%F{$springViolet}❯%f "

  # Left prompt segments
  typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
    dir                     # current directory
    vcs                     # git status
    virtualenv             # python virtual environment
    command_execution_time  # duration of the last command
  )

  # Right prompt segments
  typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
    status               # exit code of the last command
    background_jobs      # presence of background jobs
    direnv               # direnv status
    asdf                 # asdf version manager
    virtualenv           # python virtual environment
    anaconda             # conda environment
    pyenv                # python environment
    nodenv               # node.js version
    nvm                  # node.js version
    nodeenv              # node.js environment
    node_version         # node.js version
    go_version           # go version
    rust_version         # rustc version
    dotnet_version       # .net version
    php_version          # php version
    laravel_version      # laravel php framework version
    java_version         # java version
    package              # name@version from package.json
    rbenv                # ruby version
    rvm                  # ruby version
    fvm                  # flutter version
    luaenv               # lua version
    jenv                 # java version
    plenv                # perl version
    phpenv               # php version
    haskell_stack        # haskell version
    kubecontext          # current kubernetes context
    terraform            # terraform workspace
    aws                  # aws profile
    aws_eb_env           # aws elastic beanstalk environment
    azure                # azure account name
    gcloud               # google cloud profile
    google_app_cred      # google application credentials
    context              # user@hostname
    ranger               # ranger shell
    nnn                  # nnn shell
    vim_shell            # vim shell indicator
    midnight_commander   # midnight commander shell
    nix_shell            # nix shell
    vi_mode              # vi mode (you might want to remove this if you don't use vi mode)
    # Load and customize the prompt
    prompt_char          # prompt symbol
  )

  # Directory
  typeset -g POWERLEVEL9K_DIR_BACKGROUND=$dark_sumiInk
  typeset -g POWERLEVEL9K_DIR_FOREGROUND=$crystalBlue
  typeset -g POWERLEVEL9K_SHORTEN_STRATEGY=truncate_to_unique
  typeset -g POWERLEVEL9K_SHORTEN_DELIMITER=
  typeset -g POWERLEVEL9K_DIR_SHORTENED_FOREGROUND=$autumnYellow

  # VCS
  typeset -g POWERLEVEL9K_VCS_CLEAN_BACKGROUND=$dark_sumiInk
  typeset -g POWERLEVEL9K_VCS_CLEAN_FOREGROUND=$springGreen
  typeset -g POWERLEVEL9K_VCS_MODIFIED_BACKGROUND=$dark_sumiInk
  typeset -g POWERLEVEL9K_VCS_MODIFIED_FOREGROUND=$autumnYellow
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND=$dark_sumiInk
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND=$autumnRed

  # Command execution time
  typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND=$dark_sumiInk
  typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND=$boatYellow

  # Status
  typeset -g POWERLEVEL9K_STATUS_OK_BACKGROUND=$dark_sumiInk
  typeset -g POWERLEVEL9K_STATUS_OK_FOREGROUND=$springGreen
  typeset -g POWERLEVEL9K_STATUS_ERROR_BACKGROUND=$dark_sumiInk
  typeset -g POWERLEVEL9K_STATUS_ERROR_FOREGROUND=$autumnRed

  # Prompt character
  typeset -g POWERLEVEL9K_PROMPT_CHAR_OK_{VIINS,VICMD,VIVIS,VIOWR}_FOREGROUND=$oniViolet
  typeset -g POWERLEVEL9K_PROMPT_CHAR_ERROR_{VIINS,VICMD,VIVIS,VIOWR}_FOREGROUND=$autumnRed

  # Other settings
  typeset -g POWERLEVEL9K_BACKGROUND_JOBS_BACKGROUND=$dark_sumiInk
  typeset -g POWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND=$springViolet
  typeset -g POWERLEVEL9K_VIRTUALENV_BACKGROUND=$dark_sumiInk
  typeset -g POWERLEVEL9K_VIRTUALENV_FOREGROUND=$crystalBlue
}

(( ${#p10k_config_opts} )) && setopt ${p10k_config_opts[@]}
'builtin' 'unset' 'p10k_config_opts'
EOL

# 2. Copy the pristine file to the working location.
cp "$PRISTINE_FILE" "$WORKING_FILE"

# 3. Check if a user patch exists and apply it.
if [ -f "$PATCH_FILE" ]; then
  print_status "P10K_PATCH" "Found patch for .p10k.zsh. Applying..."
  if patch "$WORKING_FILE" <"$PATCH_FILE"; then
    print_success "P10K_PATCH" "Successfully applied user patch to .p10k.zsh."
  else
    print_error "P10K_PATCH" "Failed to apply patch to .p10k.zsh. Please resolve manually."
  fi
fi
#######--- END OF FILE ---#######
